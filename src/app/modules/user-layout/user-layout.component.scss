@import 'styles/mixins/rhythm.mixin';
@import 'styles/mixins/media-query.mixin';

:host {
  position: relative;
  display: block;
  width: 100%;
  height: 100%;
}

.header {
  position: absolute;
  width: 100%;
  height: rhythm(15);
  z-index: 1;
  // background-color: red;

  &__logo {
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translate(-50%, 50%);
    padding: 0 rhythm(2);
    box-shadow: var(--qq-box-shadow) var(--qq-color-element-brand-darken);
    background-color: rgba(var(--qq-color-element-brand-rgb), 0.8);
    border-radius: var(--qq-border-radius);
    -webkit-backdrop-filter: blur(5px);
    backdrop-filter: blur(5px);
    cursor: pointer;
  }
}

.logo {
  position: relative;

  &::before,
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    width: calc(0.5 * 100vw - #{rhythm(25)});
    height: 2.5px;
  }

  &::before {
    left: 0;
    transform: translateX(calc(-1 * (100% + #{rhythm(5)})));
    background: linear-gradient(
      270deg,
      var(--qq-color-bg-secondary) 0%,
      var(--qq-color-element-brand-darken) 50%,
      var(--qq-color-element-brand) 90%,
      rgba(255, 255, 255, 0) 100%
    );
  }

  &::after {
    right: 0;
    transform: translateX(calc(100% + #{rhythm(5)}));
    background: linear-gradient(
      90deg,
      var(--qq-color-bg-secondary) 0%,
      var(--qq-color-element-brand-darken) 50%,
      var(--qq-color-element-brand) 90%,
      rgba(255, 255, 255, 0) 100%
    );
  }
}

.layout {
  position: relative;
  display: block;
  width: 100%;
  height: 100%;

  &__images {
    position: absolute;
    display: block;
    height: 100%;
    width: 100%;
    filter: sepia(0.2) brightness(0.7);
    transition: background-color var(--qq-transition);
  }

  &__content {
    position: relative;
    display: block;
    height: 100%;
    width: 100%;
    padding: rhythm(5);

    @include mediaQuery(xs, md) {
      padding: rhythm(2);
    }
  }
}

.image {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
  will-change: opacity;
  transform: translate3d(0, 0, 0);
  transition: opacity var(--qq-transition);

  background-position: center;
  background-attachment: fixed;
  background-repeat: no-repeat;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;

  &--previous {
    opacity: 0;
  }

  &--active {
    opacity: 1;
  }

  &--next {
    opacity: 0;
  }
}
